"no vi-compatible
set nocompatible

" Setting up Vundle - the vim plugin bundler
let iCanHazVundle=1
let vundle_readme=expand('~/.vim/bundle/vundle/README.md')
if !filereadable(vundle_readme)
    echo "Installing Vundle..."
    echo ""
    silent !mkdir -p ~/.vim/bundle
    silent !git clone https://github.com/gmarik/vundle ~/.vim/bundle/vundle
    let iCanHazVundle=0
endif

" required for vundle
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'

" ---------------
" Bundles
" ---------------

" Navegador de archivos NEDTree
Bundle 'scrooloose/nerdtree'

" Powerline - Barra inferior mejorada
Bundle 'Lokaltog/vim-powerline'

" Surround - Permite cambiar los caracteres o tags que rodean un texto.
Bundle 'tpope/vim-surround'

" Autoclose - Cierra automaticamente los caracteres
Bundle 'AutoClose'

" Commenter - Permite comentar las líneas de código
Bundle 'scrooloose/nerdcommenter'

" Fuzzy Finder - Buscar archivos
Bundle 'kien/ctrlp.vim'

" Tagbar - Ventana para mostrar la estructura de la Clase o Modulo
Bundle 'majutsushi/tagbar'

" Zen Codding - Creación rápida de HTML y CSS
Bundle 'mattn/zencoding-vim'

" Snipmate - Snnipets de código para todos los lenguajes
Bundle 'msanders/snipmate.vim'

" ArgumentRewrap - Descompone un listado de argumentos en lineas
Bundle 'jakobwesthoff/argumentrewrap'

" Vim-easymotion - Permite desplazarse por las palabras más rapido
Bundle 'Lokaltog/vim-easymotion'

" Syntastic - Comprueba la sintaxis del codigo
Bundle 'scrooloose/syntastic'

" Autoindent para PHP
Bundle '2072/PHP-Indenting-for-VIm'

" Multiple cursors
Bundle 'terryma/vim-multiple-cursors'

"Tabman - listado de tabs
Bundle 'kien/tabman.vim'

" Color
Bundle 'fisadev/fisa-vim-colorscheme'
Bundle 'sickill/vim-monokai'
Bundle 'altercation/vim-colors-solarized'

" Autocompletado mejorado
Bundle 'AutoComplPop'

" Crear nuevos tags al guardar el archivo
Bundle 'AutoTag'

" Mejoras para copiar y pegar
Bundle 'YankRing.vim'

" PHP Documentor
Bundle 'mikehaertl/pdv-standalone'

" Installing plugins the first time
if iCanHazVundle == 0
    echo "Installing Bundles, please ignore key map error messages"
    echo ""
    :BundleInstall
endif


" Configuraciones de los plugins
"-----------------------------------------------------------

" Fix to let ESC work as espected with Autoclose plugin
let g:AutoClosePumvisible = {"ENTER": "\<C-Y>", "ESC": "\<ESC>"}

"-----------------------------------------------------------
" Espacios y Tabulaciones
"-----------------------------------------------------------

"Mostrar los espacios y tabuladores
set list
set listchars=tab:▸\ ,trail:⋅

set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4

syntax on

autocmd FileType html setlocal softtabstop=4 shiftwidth=4 tabstop=4
autocmd FileType yaml setlocal softtabstop=2 shiftwidth=2 tabstop=2
autocmd FileType javascript setlocal softtabstop=2 shiftwidth=2 tabstop=2

"-----------------------------------------------------------
" NERDTree
"-----------------------------------------------------------

" Abre automaticamente el NERDTree cuando entras al vim si no especificaste
" un archivo.
"autocmd vimenter * if !argc() | NERDTree | endif

" Cerrar el vim si la última ventana que queda abierta es la de NERDTree
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
let NERDTreeIgnore=['\.pyc$']

"-----------------------------------------------------------
" Snipmate
"-----------------------------------------------------------
let g:snippets_dir = '~/.vim/snippets/'
let g:snips_author = 'Quique Porta'

"-----------------------------------------------------------
" Powerline
"-----------------------------------------------------------

" Siempre visible la línea de estado
set ls=2

"-----------------------------------------------------------
" Commenter
"-----------------------------------------------------------

" Parametro obligatorio
filetype plugin on
filetype indent on


"-----------------------------------------------------------
" PDV Documentor for VIM
"-----------------------------------------------------------
nnoremap <F8> :call PhpDocSingle()<CR>
vnoremap <F8> :call PhpDocRange()<CR>
let g:pdv_cfg_Package = 'package'
let g:pdv_cfg_Version = '1.0'
let g:pdv_cfg_Author = 'Quique Porta <quiqueporta@gmail.com>'
let g:pdv_cfg_Copyright = 'Copyright'
let g:pdv_cfg_License = 'Provided under the GPL (http://www.gnu.org/copyleft/gpl.html)'


"-----------------------------------------------------------
" Fuzzy Finder
"-----------------------------------------------------------

let g:ctrlp_map = ',e'
nmap ,b :CtrlPBuffer<CR>
nmap ,f :CtrlPLine<CR>
nmap ,m :CtrlPMRUFiles<CR>

" Funcion para buscar por la palabra que se le pase
function! CtrlPWithSearchText(search_text, ctrlp_command_end)
    execute ':CtrlP' . a:ctrlp_command_end
    call feedkeys(a:search_text)
endfunction

" Busqueda de palabras
" Busca la palabra en el buffer
nmap ,wb :call CtrlPWithSearchText(expand('<cword>'), 'Buffer')<CR>
" Busca la palabra en el Archivo
nmap ,wf :call CtrlPWithSearchText(expand('<cword>'), 'Line')<CR>
" Busca la palabra como nombre de archivo
nmap ,we :call CtrlPWithSearchText(expand('<cword>'), '')<CR>
nmap ,pe :call CtrlPWithSearchText(expand('<cfile>'), '')<CR>

" Que no cambie el working directory
let g:ctrlp_working_path_mode = 0

" Ignorar estos archivos
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v[\/](\.git|\.hg|\.svn)$',
    \ 'file': '\.pyc$\|\.pyo$',
    \ }

"-----------------------------------------------------------
" Tagbar
"-----------------------------------------------------------
" Le indicamos donde esta el ctags
let g:tagbar_phpctags_bin='/usr/bin/ctags-exuberant'
let g:tagbar_autofocus = 1
let g:tagbar_compact = 1
let g:tagbar_foldlevel = 0

"-----------------------------------------------------------
" Autocompletion
"-----------------------------------------------------------
" Cerrado automatico del Autocompletions
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif
highlight Pmenu ctermbg=4 guibg=LightGray

" Busqueda en todo los ambitos
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_NamespaceSearch = 2
let OmniCpp_DisplayMode = 1
let OmniCpp_ShowScopeInAbbr = 0
let OmniCpp_ShowPrototypeInAbbr = 1
let OmniCpp_ShowAccess = 1
" Comportamiento del Autocompletado
let OmniCpp_MayCompleteDot = 0
let OmniCpp_MayCompleteArrow = 0
let OmniCpp_MayCompleteScope = 0

let OmniCpp_SelectFirstItem = 0

"-----------------------------------------------------------
" Tabman
"-----------------------------------------------------------
let g:tabman_toggle = 'tl'
let g:tabman_focus  = 'tf'

"-----------------------------------------------------------
" Multi cursor
"-----------------------------------------------------------
let g:multi_cursor_next_key='<C-n>'
let g:multi_cursor_prev_key='<C-p>'

"-----------------------------------------------------------
" Color
"-----------------------------------------------------------

set background=dark

if &term =~? 'mlterm\|xterm\|screen-256'
    let &t_Co = 256
    colorscheme Monokai
else
    colorscheme Monokai
endif

"-----------------------------------------------------------
" Busqueda
"-----------------------------------------------------------

" Busqueda incremental
set incsearch
" Resaltar texto buscado
set hlsearch

"-----------------------------------------------------------
" Mapeos de teclas
"-----------------------------------------------------------

" Remapear la leader key
let mapleader = ","

" Guardamos el archivo
imap <F2> <ESC>:w<CR>
nmap <F2> <ESC>:w<CR>
vmap <F2> <ESC>:w<CR>

" Abre o cierra el NERDTree
map <F3> :NERDTreeToggle<CR>

" Encuentra un archivo abierto en el NERDTree
map <F4> :NERDTreeFind<CR>

" Abre o cierra el Tagbar
map <F5> :TagbarToggle<CR>

" Abre el listado de lineas copiadas al buffer
nnoremap <silent> <F11> :YRShow<CR>

" Quitar espacios al guardar el archivo
nmap <F12> :%s/\s\+$//<CR>

" Para salir del modo INSERT
inoremap kj <ESC>l

" Editar el .vimrc
nmap vimrc :tabnew ~/.vimrc<CR>

" Duplicar una linea
nmap dl :t.<CR>

" Cambiar entre ventanas
nmap <TAB><TAB> <C-w><C-w>

" Cambiar tamaño ventanas
nmap > <C-w>>
nmap < <C-w><

" Cambio entre TABS
map tn :tabn<CR>
map tp :tabp<CR>
map tm :tabm<CR>
map tt :tabnew

" Cierra todas las ventanas.
noremap <Leader>q :quit<CR>
noremap <Leader>Q :qa!<CR>

" Abrir el autocompletado
"imap <C-J> <C-X><C-O>

" Ir a la definición de una clase, metodo, etc..
nmap gd <c-w><c-]>

" Habilitamos el ratón
set mouse=a

" Desglosar en líneas los parametros de una función.
nnoremap <silent> <leader>s :call argumentrewrap#RewrapArguments()<CR>

" Para que mueva linea a linea aunque tenga activado el warp line
nnoremap j gj
nnoremap k gk

" Para mover bloques de texto y lineas.
nnoremap <C-J> :m .+1<CR>==
nnoremap <C-K> :m .-2<CR>==
inoremap <C-j> <Esc>:m .+1<CR>==gi
inoremap <C-k> <Esc>:m .-2<CR>==gi
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gv

"-----------------------------------------------------------
" Varios
"-----------------------------------------------------------

" Para GVim
"set guioptions-=m  "remove menu bar
set guioptions-=T  "remove toolbar
set guioptions-=r  "remove right-hand scroll bar

" Números de línea
set nu

" Que el scroll se quede 4 líneas por encima del final del texto
set scrolloff=6

" Se vuelver a seleccionar el texto despues de identarlo
vnoremap < <gv
vnoremap > >gv

" Deshabilita la creacion de backups.
set nobackup
set nowritebackup
set noswapfile

" Incrementando el nivel de UNDO
set undolevels=1000 "maximum number of changes that can be undone
set undoreload=10000 "maximum number lines to save for undo on a buffer reload
set history=700

" Mostrar linea actual resaltada.
set cursorline
":hi CursorLine   cterm=NONE ctermbg=233 guibg=grey

" Cambiar la línea resaltada, por la columna resaltada.
:nnoremap <C-Space> :set cursorline! cursorcolumn!<CR>

" Busqueda Recursiva con grep
command! -nargs=1 RecurGrep lvimgrep /<args>/gj ./**/*.* | lopen | set nowrap
command! -nargs=1 RecurGrepFast exec 'lgrep! <q-args> ./**/*.*' | lopen
nmap ,R :RecurGrep
nmap ,r :RecurGrepFast
nmap ,wR :RecurGrep <cword><CR>
nmap ,wr :RecurGrepFast <cword><CR>

set wildmode=list:longest

" Autocompletado para PHP
autocmd FileType php set omnifunc=phpcomplete#CompletePHP

" CTAGS
set tags=tags
set tags+=/usr/lib/symfony/1.4.20/tags

" Mostrar de otro color a partir de la columna 80
" let &colorcolumn=join(range(81,999),",")
set colorcolumn=80


" Folding
set foldmethod=syntax
set foldlevelstart=1

let javaScript_fold=1         " JavaScript
let perl_fold=1               " Perl
let php_folding=1             " PHP
let r_syntax_folding=1        " R
let ruby_fold=1               " Ruby
let sh_fold_enabled=1         " sh
let vimsyn_folding='af'       " Vim script
let xml_syntax_folding=1      " XML
